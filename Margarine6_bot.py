import os
import telebot
from yt_dlp import YoutubeDL
import subprocess
import re
import config  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏

bot = telebot.TeleBot(API_TOKEN)

if not os.path.exists(DOWNLOAD_DIR):
    os.makedirs(DOWNLOAD_DIR)

def sanitize_filename(filename):
    """
    –£–¥–∞–ª—è–µ—Ç –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã.
    """
    return re.sub(r'[:"*?<>|/\\]', '', filename).strip()

def sanitize_filepath(filepath):
    """
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç sanitize_filename –∫–æ –≤—Å–µ–π —á–∞—Å—Ç–∏ –ø—É—Ç–∏.
    """
    directory, filename = os.path.split(filepath)
    sanitized_filename = sanitize_filename(filename)
    return os.path.join(directory, sanitized_filename)

def notify_admin(user_id, username, message_text):
    bot.send_message(
        ADMIN_ID,
        f"üîî –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
        f"ID: {user_id}\n"
        f"–ò–º—è: {username}\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message_text}"
    )

def is_subscribed(user_id):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª.
    """
    try:
        chat_member = bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return chat_member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

def process_video(video_path):
    try:
        video_path = sanitize_filepath(video_path)  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø—É—Ç—å –±–µ–∑–æ–ø–∞—Å–µ–Ω
        fixed_video_path = sanitize_filepath(os.path.splitext(video_path)[0] + "_fixed.mp4")

        # –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FFmpeg (–¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö)
        ffmpeg_command = [
            "ffmpeg", "-i", video_path,
            "-movflags", "faststart",  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
            "-c", "copy",
            fixed_video_path
        ]
        subprocess.run(ffmpeg_command, check=True)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é FFmpeg
        ffmpeg_command = [
            "ffmpeg", "-i", fixed_video_path
        ]
        result = subprocess.run(ffmpeg_command, stderr=subprocess.PIPE, text=True)
        ffmpeg_output = result.stderr

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —à–∏—Ä–∏–Ω—ã –∏ –≤—ã—Å–æ—Ç—ã –≤–∏–¥–µ–æ
        resolution_match = re.search(r'Video:.* (\d+)x(\d+)', ffmpeg_output)
        if resolution_match:
            width = int(resolution_match.group(1))
            height = int(resolution_match.group(2))
        else:
            raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ä–∞–∑–º–µ—Ä—ã –≤–∏–¥–µ–æ.")

        # –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        if os.path.exists(video_path):
            os.remove(video_path)
            print(f"–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ {video_path} —É–¥–∞–ª–µ–Ω–æ.")
        else:
            print(f"–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ {video_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")

        return fixed_video_path, width, height

    except subprocess.CalledProcessError as e:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ FFmpeg: {e}")

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    notify_admin(message.from_user.id, message.from_user.username, message.text)
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è.")

@bot.message_handler(commands=['show_downloads'])
def show_downloads(message):
    if message.from_user.id == ADMIN_ID:
        try:
            files = os.listdir(DOWNLOAD_DIR)
            if files:
                bot.send_message(
                    message.chat.id,
                    "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ downloads:\n" + "\n".join(files)
                )
            else:
                bot.send_message(message.chat.id, "–ü–∞–ø–∫–∞ downloads –ø—É—Å—Ç–∞.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏: {e}")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

@bot.message_handler(commands=['clean_downloads'])
def clean_downloads(message):
    """
    –û—á–∏—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.
    –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    """
    if message.from_user.id == ADMIN_ID:
        try:
            # –û—á–∏—â–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ downloads
            for filename in os.listdir(DOWNLOAD_DIR):
                file_path = os.path.join(DOWNLOAD_DIR, filename)
                if os.path.isfile(file_path):
                    os.remove(file_path)
            bot.send_message(message.chat.id, "–ü–∞–ø–∫–∞ downloads –æ—á–∏—â–µ–Ω–∞.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–∞–ø–∫–∏: {e}")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

@bot.message_handler(content_types=['text'])
def download_video(message):
    if not is_subscribed(message.from_user.id):
        bot.reply_to(
            message,
            "–ë–æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –º–æ–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞: "
            "[–ü–µ—Ä–µ–¥–∞—Ç—á–∏–∫ –í–æ–≤–∞–Ω–∞](https://t.me/+AM5qac1gwTUwMGNi)",
            parse_mode='Markdown'
        )
        return

    notify_admin(message.from_user.id, message.from_user.username, message.text)
    url = message.text
    bot.reply_to(message, "–ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ...")

    try:
        with YoutubeDL({'format': 'best', 'outtmpl': f'{DOWNLOAD_DIR}/%(title)s.%(ext)s'}) as ydl:
            info = ydl.extract_info(url, download=True)
            video_path = sanitize_filepath(ydl.prepare_filename(info))
            fixed_video_path, width, height = process_video(video_path)

            with open(fixed_video_path, 'rb') as video_file:
                bot.send_video(message.chat.id, video_file, width=width, height=height)
    except Exception as e:
        bot.send_message(ADMIN_ID, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ.")

bot.polling()
