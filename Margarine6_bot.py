import os
import telebot
from yt_dlp import YoutubeDL
import subprocess
import re

API_TOKEN = '7667567049:AAFz2iBVViSl4i-d3gZMALLFvWMDplVw3PI'
ADMIN_ID = 167815811  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID

bot = telebot.TeleBot(API_TOKEN)

DOWNLOAD_DIR = "./downloads"

if not os.path.exists(DOWNLOAD_DIR):
    os.makedirs(DOWNLOAD_DIR)

CHANNEL_USERNAME = "@vovanradio"

def sanitize_filename(filename):
    """
    –£–¥–∞–ª—è–µ—Ç –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã.
    """
    return re.sub(r'[:"*?<>|/\\]', '', filename).strip()

def sanitize_filepath(filepath):
    """
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç sanitize_filename –∫–æ –≤—Å–µ–π —á–∞—Å—Ç–∏ –ø—É—Ç–∏.
    """
    directory, filename = os.path.split(filepath)
    sanitized_filename = sanitize_filename(filename)
    return os.path.join(directory, sanitized_filename)

def notify_admin(user_id, username, message_text):
    bot.send_message(
        ADMIN_ID,
        f"üîî –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
        f"ID: {user_id}\n"
        f"–ò–º—è: {username}\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message_text}"
    )

def is_subscribed(user_id):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª.
    """
    try:
        chat_member = bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return chat_member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

def split_video(video_path):
    """
    –†–∞–∑–¥–µ–ª—è–µ—Ç –≤–∏–¥–µ–æ –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ 20 –º–∏–Ω—É—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–µ–≥–º–µ–Ω—Ç–æ–≤.
    """
    try:
        sanitized_video_path = sanitize_filepath(video_path)  # –û—á–∏—â–∞–µ–º –ø—É—Ç—å
        file_size = os.path.getsize(sanitized_video_path) / (1024 * 1024)  # –†–∞–∑–º–µ—Ä –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö

        part_num = 1
        output_files = []
        segment_duration = 1200  # 20 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        # –ü–æ–ª—É—á–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é ffprobe
        result = subprocess.run(
            ["ffprobe", "-v", "error", "-show_entries", "format=duration", "-of", "default=noprint_wrappers=1:nokey=1", sanitized_video_path],
            stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True
        )
        total_duration_str = result.stdout.strip()  # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        total_duration = float(total_duration_str)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —á–∏—Å–ª–æ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

        # –ï—Å–ª–∏ –≤–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ, –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω–µ–º –µ–≥–æ –±–µ–∑ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        if total_duration <= segment_duration:
            output_files = [sanitized_video_path]
            return output_files, total_duration
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–∞ 20 –º–∏–Ω—É—Ç–Ω—ã–µ —á–∞—Å—Ç–∏
        split_command = [
            "ffmpeg", "-i", sanitized_video_path,
            "-c", "copy",  # –ö–æ–ø–∏—Ä—É–µ–º –±–µ–∑ –ø–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
            "-map", "0",   # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–æ—Ç–æ–∫–∏ (–≤–∏–¥–µ–æ, –∞—É–¥–∏–æ)
            "-f", "segment",  # –§–æ—Ä–º–∞—Ç —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏
            "-segment_time", str(segment_duration),  # –í—Ä–µ–º—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏: 1200 —Å–µ–∫—É–Ω–¥ = 20 –º–∏–Ω—É—Ç
            "-reset_timestamps", "1",  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–∞–∂–¥–æ–º —Å–µ–≥–º–µ–Ω—Ç–µ
            f"{sanitized_video_path}_part%03d.mp4"  # –§–æ—Ä–º–∞—Ç –∏–º–µ–Ω–∏ —á–∞—Å—Ç–µ–π
        ]
        
        print(f"–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è: {' '.join(split_command)}")
        subprocess.run(split_command, check=True)
        print("–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã...")
        
        # –°–æ–±–∏—Ä–∞–µ–º –ø—É—Ç–∏ –∫ —á–∞—Å—Ç—è–º
        part_num = 1
        while True:
            part_file = f"{sanitized_video_path}_part{part_num:03d}.mp4"
            if os.path.exists(part_file):
                output_files.append(part_file)
                part_num += 1
            else:
                break
        
        if not output_files:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–µ–≥–º–µ–Ω—Ç—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ ffmpeg –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            raise FileNotFoundError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–µ–≥–º–µ–Ω—Ç—ã –≤–∏–¥–µ–æ.")

        return output_files, total_duration
        
    except Exception as e:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")



def process_video(video_path):
    try:
        video_path = sanitize_filepath(video_path)  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø—É—Ç—å –±–µ–∑–æ–ø–∞—Å–µ–Ω
        fixed_video_path = sanitize_filepath(os.path.splitext(video_path)[0] + "_fixed.mp4")

        # –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FFmpeg (–¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö)
        ffmpeg_command = [
            "ffmpeg", "-i", video_path,
            "-movflags", "faststart",  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
            "-c", "copy",
            fixed_video_path
        ]
        subprocess.run(ffmpeg_command, check=True)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é FFmpeg
        ffmpeg_command = [
            "ffmpeg", "-i", fixed_video_path
        ]
        result = subprocess.run(ffmpeg_command, stderr=subprocess.PIPE, text=True)
        ffmpeg_output = result.stderr

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —à–∏—Ä–∏–Ω—ã –∏ –≤—ã—Å–æ—Ç—ã –≤–∏–¥–µ–æ
        resolution_match = re.search(r'Video:.* (\d+)x(\d+)', ffmpeg_output)
        if resolution_match:
            width = int(resolution_match.group(1))
            height = int(resolution_match.group(2))
        else:
            raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ä–∞–∑–º–µ—Ä—ã –≤–∏–¥–µ–æ.")

        # –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        if os.path.exists(video_path):
            os.remove(video_path)
            print(f"–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ {video_path} —É–¥–∞–ª–µ–Ω–æ.")
        else:
            print(f"–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ {video_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")


        return fixed_video_path, width, height

    except subprocess.CalledProcessError as e:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ FFmpeg: {e}")

def download_with_proxy(url):
    ydl_opts_with_proxy = {
        'format': 'bestvideo[height<=480][vcodec^=avc1]+bestaudio[acodec^=mp4a]/best[height<=480][vcodec^=avc1]',
        'outtmpl': f'{DOWNLOAD_DIR}/%(title)s.%(ext)s',
        'merge_output_format': 'mp4',
        'socket_timeout': 30,
        'geo_bypass': True,
        'cookies': '/root/Margarine6_bot/cookies.txt',
        'user_agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
    }

    with YoutubeDL(ydl_opts_with_proxy) as ydl:
        info = ydl.extract_info(url, download=True)
        sanitized_path = sanitize_filepath(ydl.prepare_filename(info))
        return sanitized_path

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º ydl_opts
ydl_opts = {
    'format': 'bestvideo[height<=480][vcodec^=avc1]+bestaudio[acodec^=mp4a]/best[height<=480][vcodec^=avc1]',
    'outtmpl': f'{DOWNLOAD_DIR}/%(title)s.%(ext)s',
    'merge_output_format': 'mp4',
    'socket_timeout': 30,
    'geo_bypass': True,
}

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    notify_admin(message.from_user.id, message.from_user.username, message.text)
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    try:
        with open("margarine_intro.mp4", "rb") as video:
            bot.send_video(
                message.chat.id,
                video,
                caption="–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º."
            )
    except Exception as e:
        bot.send_message(
            ADMIN_ID,
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username} (ID: {message.from_user.id})\n"
            f"–û—à–∏–±–∫–∞: {e}"
        )

@bot.message_handler(commands=['show_downloads'])
def show_downloads(message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.
    –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    """
    if message.from_user.id == ADMIN_ID:
        try:
            files = os.listdir(DOWNLOAD_DIR)
            if files:
                bot.send_message(
                    message.chat.id,
                    "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ downloads:\n" + "\n".join(files)
                )
            else:
                bot.send_message(message.chat.id, "–ü–∞–ø–∫–∞ downloads –ø—É—Å—Ç–∞.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏: {e}")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

@bot.message_handler(commands=['clean_downloads'])
def clean_downloads(message):
    """
    –û—á–∏—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.
    –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    """
    if message.from_user.id == ADMIN_ID:
        try:
            # –û—á–∏—â–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ downloads
            for filename in os.listdir(DOWNLOAD_DIR):
                file_path = os.path.join(DOWNLOAD_DIR, filename)
                if os.path.isfile(file_path):
                    os.remove(file_path)
            bot.send_message(message.chat.id, "–ü–∞–ø–∫–∞ downloads –æ—á–∏—â–µ–Ω–∞.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–∞–ø–∫–∏: {e}")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

@bot.message_handler(content_types=['text'])
def download_video(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    if not is_subscribed(message.from_user.id):
        bot.reply_to(
            message,
            "–ë–æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –º–æ–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞: "
            "[–ü–µ—Ä–µ–¥–∞—Ç—á–∏–∫ –í–æ–≤–∞–Ω–∞](https://t.me/+AM5qac1gwTUwMGNi)",
            parse_mode='Markdown'
        )
        return

    notify_admin(message.from_user.id, message.from_user.username, message.text)
    url = message.text
    bot.reply_to(message, "–ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ...")

    try:
        with YoutubeDL(ydl_opts) as ydl:
            # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
            info = ydl.extract_info(url, download=False)

            # –û—á–∏—Å—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
            clean_title = sanitize_filename(info['title'])

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Ç–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            file_path = os.path.join(DOWNLOAD_DIR, f"{clean_title}.mp4")

            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if os.path.exists(file_path):
                os.remove(file_path)

            # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
            info = ydl.extract_info(url, download=True)
            video_path = sanitize_filepath(ydl.prepare_filename(info))

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
            fixed_video_path, width, height = process_video(video_path)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–∞–∑–¥–µ–ª—è–µ–º
            file_size = os.path.getsize(fixed_video_path) / (1024 * 1024)  # –†–∞–∑–º–µ—Ä –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö
            print(f"–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–∏–¥–µ–æ: {fixed_video_path}, —Ä–∞–∑–º–µ—Ä: {file_size:.2f} –ú–ë")
            if file_size > 49:
                bot.reply_to(message, "–û-–æ—É, –≤–∏–¥–µ–æ –≤–µ–ª–∏–∫–æ–≤–∞—Ç–æ, –ø—Ä–∏–¥—ë—Ç—Å—è –µ–≥–æ –ø–æ–ø–∏–ª–∏—Ç—å –Ω–∞ —á–∞—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É—é...")
                # –†–∞–∑–¥–µ–ª—è–µ–º –≤–∏–¥–µ–æ, –µ—Å–ª–∏ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –±–æ–ª—å—à–µ 49 –ú–ë
                video_parts, total_duration = split_video(fixed_video_path)
                print(f"–°–µ–≥–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã: {video_parts}. –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π: {len(video_parts)}")
            else:
                video_parts = [fixed_video_path]  # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –º–µ–Ω—å—à–µ 49 –ú–ë, –Ω–µ —Ä–∞–∑–¥–µ–ª—è–µ–º
                total_duration = 0

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –≤–∏–¥–µ–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Ä–µ–º–µ–Ω–∏, –µ—Å–ª–∏ –≤–∏–¥–µ–æ —Ä–∞–∑–¥–µ–ª—è–µ—Ç—Å—è
        for idx, part in enumerate(video_parts, start=1):
            if not os.path.exists(part):
                print(f"–°–µ–≥–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {part}. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

            if total_duration > 0:
                start_time = (idx - 1) * 20  # –ù–∞—á–∞–ª–æ –æ—Ç—Ä–µ–∑–∫–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö)
                end_time = min(idx * 20, total_duration // 60)  # –ö–æ–Ω–µ—Ü –æ—Ç—Ä–µ–∑–∫–∞
                caption = f"–ß–∞—Å—Ç—å {idx}: —Å {start_time} –¥–æ {end_time} –º–∏–Ω—É—Ç"
            else:
                caption = None  # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ —Ä–∞–∑–¥–µ–ª—è–µ—Ç—Å—è, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–µ–π

            with open(part, 'rb') as video_file:
                bot.send_video(
                    message.chat.id,
                    video_file,
                    width=width,
                    height=height,
                    caption=caption
                )

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ —Ä–∞–∑–º–µ—Ä–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
            file_size = os.path.getsize(part) / (1024 * 1024)  # –†–∞–∑–º–µ—Ä –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö
            bot.send_message(
                ADMIN_ID,
                f"–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{message.from_user.username} (ID: {message.from_user.id}).\n"
                f"–†–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ: {file_size:.2f} –ú–ë"
            )

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.remove(part)

    except Exception as e:
        # –õ–æ–≥ –æ—à–∏–±–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        error_log = (
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ:\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username} (ID: {message.from_user.id})\n"
            f"–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: {url}\n"
            f"–û—à–∏–±–∫–∞: {e}"
        )
        bot.send_message(ADMIN_ID, error_log)

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ—à–∏–±–∫–µ
        bot.reply_to(
            message,
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. "
            "–Ø –æ—Ç–ø—Ä–∞–≤–ª—é –æ—Ç—á—ë—Ç –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞."
        )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
